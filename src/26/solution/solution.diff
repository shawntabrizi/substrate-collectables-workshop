diff --git a/src/impls.rs b/src/impls.rs
index 3dd15659..9d435f5b 100644
--- a/src/impls.rs
+++ b/src/impls.rs
@@ -35,14 +35,8 @@ impl<T: Config> Pallet<T> {
 		Ok(())
 	}
 
-	/* ðŸš§ TODO ðŸš§: Create an internal function called `do_transfer`:
-		- It has inputs:
-			- `from` which is `T::AccountId`.
-			- `to` which is `T::AccountId`.
-			- `kitty_id` which is `[u8; 32]`.
-		- It returns a `DispatchResult`
-		- The inner logic for now is:
-			- Call `Self::deposit_event` and emit `Event::<T>:Transferred` with params.
-			- Return `Ok(())`.
-	*/
+	pub fn do_transfer(from: T::AccountId, to: T::AccountId, kitty_id: [u8; 32]) -> DispatchResult {
+		Self::deposit_event(Event::<T>::Transferred { from, to, kitty_id });
+		Ok(())
+	}
 }
diff --git a/src/lib.rs b/src/lib.rs
index ac84fa65..971af78d 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -44,12 +44,7 @@ pub mod pallet {
 	#[pallet::generate_deposit(pub(super) fn deposit_event)]
 	pub enum Event<T: Config> {
 		Created { owner: T::AccountId },
-		/* ðŸš§ TODO ðŸš§: Create a new event called `Transferred`:
-			- Parameters are:
-				- `from` which is `T::AccountId`.
-				- `to` which is `T::AccountId`.
-				- `kitty_id` which is `[u8; 32]`.
-		*/
+		Transferred { from: T::AccountId, to: T::AccountId, kitty_id: [u8; 32] },
 	}
 
 	#[pallet::error]
@@ -68,16 +63,14 @@ pub mod pallet {
 			Ok(())
 		}
 
-		/* ðŸš§ TODO ðŸš§: Make a new extrinsic called `transfer`.
-			- Input parameters are:
-				- `origin` which is `OriginFor<T>`.
-				- `to` which is `T::AccountId`.
-				- `kitty_id` which is `[u8; 32]`.
-			- Returns a `DispatchResult`.
-			- The inner logic should be:
-				- Get the caller `who` from `ensure_signed`.
-				- Call `Self::do_transfer`, and propagate the result.
-				- End with Ok(()).
-		*/
+		pub fn transfer(
+			origin: OriginFor<T>,
+			to: T::AccountId,
+			kitty_id: [u8; 32],
+		) -> DispatchResult {
+			let who = ensure_signed(origin)?;
+			Self::do_transfer(who, to, kitty_id)?;
+			Ok(())
+		}
 	}
 }
diff --git a/src/tests.rs b/src/tests.rs
index 6a7f5b74..3dc077cc 100644
--- a/src/tests.rs
+++ b/src/tests.rs
@@ -259,3 +259,19 @@ fn cannot_own_too_many_kitties() {
 		);
 	});
 }
+
+#[test]
+fn transfer_emits_event() {
+	new_test_ext().execute_with(|| {
+		// We need to set block number to 1 to view events.
+		System::set_block_number(1);
+		// Create a kitty to transfer
+		assert_ok!(PalletKitties::create_kitty(RuntimeOrigin::signed(ALICE)));
+		// Get the kitty id.
+		let kitty_id = Kitties::<TestRuntime>::iter_keys().collect::<Vec<_>>()[0];
+		assert_ok!(PalletKitties::transfer(RuntimeOrigin::signed(ALICE), BOB, kitty_id));
+		System::assert_last_event(
+			Event::<TestRuntime>::Transferred { from: ALICE, to: BOB, kitty_id }.into(),
+		);
+	});
+}
